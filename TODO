Run the code through Coverity and cppcheck.

Emit a fossil map that reposurgeon can use.

Simulate CVS's default ignore patterns in a generated .gitignore?

An optional progress meter.

Discard branch-root tags if they have a name that's a prefix of a tip tag.

Make regression-test loads that create funky and invalid tags.  Add some
more test loads derived from CVS repos found in the wild.

git-cvsimport is a wrapper around cvsps; talk with its maintainer
and simplify that code.

Extend direct mode so the fetches of file content for fast-export
mode can be done through it.

Hide data fetching behind an API so that the difference between normal
mode, direct mode, and running from a logfile capture is not visible
in cvsps.c

Maybe scrap options and simplify code?  -A looks like a candidate for
removal.  So does --bkcvs.

Branch-merge detection.  Not sure it's possible but I want to look
into it.  Are merge_ tags standardized enough to use?

Way in the future...does this belong in C?  Maybe not.  Performance
is going to be limited by network latency anyway, so Python or Ruby
might be better tools - code size would drop by about x4, I think.

Bugs on the git-cvsimport page:

    Problems related to timestamps:

	If timestamps of commits in the CVS repository are not stable
	enough to be used for ordering commits changes may show up in the
	wrong order.

	If any files were ever "cvs import"ed more than once (e.g., import
	of more than one vendor release) the HEAD contains the wrong
	content.

	If the timestamp order of different files cross the revision order
	within the commit matching time window the order of commits may be
	wrong.

    Problems related to branches:

	Branches on which no commits have been made are not imported.

	All files from the branching point are added to a branch even if
	never added in CVS.

	This applies to files added to the source branch after a daughter
	branch was created: if previously no commit was made on the
	daughter branch they will erroneously be added to the daughter
	branch in git.

Can we fix any of these?  We should develop test loads ton demonstrate.

